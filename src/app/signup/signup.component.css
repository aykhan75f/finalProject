* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
}

.cont {
  width: 100%;
  height: 100vh;
  background: linear-gradient(90deg, rgba(2, 0, 36, 0.2) 0%, );
  min-height: 90vh;
  display: flex;
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  align-items: center;
  justify-content: center;
  padding: 20px;
  background-repeat: no-repeat;
  background: #242145;
  background-image: url("https://wallpapercave.com/wp/wp2757874.gif");
  background-size: cover;
}

.container {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: "Poppins", sans-serif;
  position: relative;
  max-width: 580px;
  width: 100%;
  background: rgba(255, 255, 255, 0.2);
  padding: 20px 50px;
  border-radius: 85px;
}

.container header {
  font-size: 1.5rem;
  color: black;
  font-weight: 500;
  text-align: center;
}

.al {
  text-align: center;
  transition: transform 0.2s ease;
  margin-top: 5px;
  color: black;
}

.al:hover {
  transform: scale(1.09);
}

.log {
  text-align: center;
  text-decoration: none;
  margin-top: 5px;
  color: black;
}

.log:hover {
  transform: scale(1.4);
}

.container .form {
  margin-top: 20px;
}

.form .input-box {
  width: 100%;
  margin-top: 5px;
  transition: transform 0.2s ease;
  color: black;
}

.form .input-box:hover {
  transform: scale(1.03);
}

.input-box label {
  color: black;
}

.form :where(.input-box input, .select-box) {
  position: relative;
  height: 50px;
  width: 100%;
  outline: none;
  font-size: 1rem;
  color: black;
  margin-top: 8px;
  border-radius: 6px;
  padding: 0 15px;
}

.input-box input:focus {
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
}

.form .column {
  display: flex;
  column-gap: 15px;
}

.form .gender-box {
  margin-top: 20px;
}

.gender-box h3 {
  color: black;
  font-size: 1rem;
  font-weight: 400;
  margin-bottom: 8px;
}

.form :where(.gender-option, .gender) {
  display: flex;
  align-items: center;
  column-gap: 50px;
  flex-wrap: wrap;
}

.form .gender {
  column-gap: 5px;
}

.gender input {
  accent-color: rgb(130, 106, 251);
  color: black;
  transition: transform 0.2s ease;
}

.gender input:hover {
  transform: scale(1.3);
}

.form :where(.gender input, .gender label) {
  cursor: pointer;
}

.gender label {
  color: black;
}

.address :where(input, .select-box) {
  margin-top: 15px;
}

.select-box select {
  height: 100%;
  width: 100%;
  outline: none;
  border: 2px solid black;
  border-radius: 5px;
  color: black;
  font-size: 1rem;
}

.form .submit-btn {
  height: 55px;
  width: 100%;
  color: #fff;
  font-size: 1rem;
  font-weight: 400;
  margin-top: 30px;
  border: none;
  cursor: pointer;
  transition: all 0.2s ease;
  background: rgb(2, 0, 36);
  background: linear-gradient(90deg, rgba(2, 0, 68, 1) 0%, );
  border-radius: 25px;
  transition: transform 0.3s ease;
}

.form .submit-btn:hover {
  background: rgb(2, 0, 36);
  background: linear-gradient(90deg, rgba(2, 0, 68, 1) 0%, );
  transform: scale(1.1);

}

@media screen and (max-width: 500px) {
  .form .column {
    flex-wrap: wrap;
  }

  .form :where(.gender-option, .gender) {
    row-gap: 15px;
  }
}

.form-shadow {
  box-shadow: rgba(187, 185, 185, 0.35) 0px 5px 15px;
}

input.ng-invalid.ng-touched {
  border: red 2px solid;
}

small {
  color: red;
  font-weight: bold;
}


.user-detail-container {
  position: relative;
  max-width: 700px;
  width: 100%;
  background: rgba(255, 255, 255, 0.3);
  padding: 20px 30px;
  border-radius: 55px;
  margin-top: 30px;
}

.user-details-container {
  display: flex;
}

.user-avatar {
  width: 180px;
  height: 180px;
  border-radius: 50%;
  background-color: #282C35;
  font-size: 75px;
  font-weight: bold;
  padding: 40px 40px;
  color: white;
}

.user-details {
  padding: 0px 40px;
}

.user-name {
  padding-bottom: 5px;
  margin-bottom: 5px;
  border-bottom: #123 2px solid;
  width: 100%;
  margin-top: 10px;
}

span {
  padding: 5px 5px;
  font-weight: bold;
}

input.ng-invalid.ng-touched {
  border: red 2px solid;
}

input.ng-pending {
  border: yellow 2px solid;
}

.container.VALID {
  border: green 3px solid;
}

.container.INVALID {
  border: red 3px solid;
}

.container.PENDING {
  border: orange 3px solid;
}